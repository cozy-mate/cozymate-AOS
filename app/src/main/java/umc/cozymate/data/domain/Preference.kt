package umc.cozymate.data.domain

import umc.cozymate.R

enum class Preference(
    val pref: String,
    val displayName: String,
    val subText: String,
    val blueDrawable: Int,
    val redDrawable: Int,
    val grayDrawable: Int,
) {
    BIRTH_YEAR(
        "birthYear",
        "출생년도",
        "년",
        R.drawable.ic_birth_year_blue,
        R.drawable.ic_birth_year_red,
        R.drawable.ic_birth_year_gray
    ),
    ADMISSION_YEAR(
        "admissionYear",
        "학번",
        "학번",
        R.drawable.ic_admission_year_blue,
        R.drawable.ic_admission_year_red,
        R.drawable.ic_admission_year_gray
    ),
    MAJOR_NAME(
        "majorName",
        "학과",
        "",
        R.drawable.ic_major_blue,
        R.drawable.ic_major_red,
        R.drawable.ic_major_gray
    ),
    DORM_JOINING_STATUS(
        "dormJoiningStatus",
        "합격여부",
        "",
        R.drawable.ic_acceptance_blue,
        R.drawable.ic_acceptance_red,
        R.drawable.ic_acceptance_gray
    ),
    WAKE_UP_TIME(
        "wakeUpTime",
        "기상시간",
        ":00",
        R.drawable.ic_wake_up_time_blue,
        R.drawable.ic_wake_up_time_red,
        R.drawable.ic_wake_up_time_gray
    ),
    SLEEPING_TIME(
        "sleepingTime",
        "취침시간",
        ":00",
        R.drawable.ic_sleeping_time_blue,
        R.drawable.ic_sleeping_time_red,
        R.drawable.ic_sleeping_time_gray
    ),
    TURN_OFF_TIME(
        "turnOffTime",
        "소등시간",
        ":00",
        R.drawable.ic_turn_off_time_blue,
        R.drawable.ic_turn_off_time_red,
        R.drawable.ic_turn_off_time_gray
    ),
    SMOKING_STATUS(
        "smokingStatus",
        "흡연여부",
        "",
        R.drawable.ic_smoking_blue,
        R.drawable.ic_smoking_red,
        R.drawable.ic_smoking_gray
    ),
    SLEEPING_HABITS(
        "sleepingHabits",
        "잠버릇",
        "",
        R.drawable.ic_sleeping_habit_blue,
        R.drawable.ic_sleeping_habit_red,
        R.drawable.ic_sleeping_habit_gray
    ),
    COOLING_INTENSITY(
        "coolingIntensity",
        "에어컨",
        "",
        R.drawable.ic_air_conditioning_intensity_blue,
        R.drawable.ic_air_conditioning_intensity_red,
        R.drawable.ic_air_conditioning_intensity_gray
    ),
    HEATING_INTENSITY(
        "heatingIntensity",
        "히터",
        "",
        R.drawable.ic_heating_intensity_blue,
        R.drawable.ic_heater_intensity_red,
        R.drawable.ic_heating_intensity_gray
    ),
    LIFE_PATTERN(
        "lifePattern",
        "생활패턴",
        "",
        R.drawable.ic_life_pattern_blue,
        R.drawable.ic_life_pattern_red,
        R.drawable.ic_life_pattern_gray
    ),
    INTIMACY(
        "intimacy",
        "친밀도",
        "",
        R.drawable.ic_intimacy_blue,
        R.drawable.ic_intimacy_red,
        R.drawable.ic_intimacy_gray
    ),
    SHARING_STATUS(
        "sharingStatus",
        "물건공유",
        "",
        R.drawable.ic_can_share_blue,
        R.drawable.ic_can_share_red,
        R.drawable.ic_can_share_gray
    ),
    GAMING_STATUS(
        "gamingStatus",
        "게임여부",
        "",
        R.drawable.ic_is_play_game_blue,
        R.drawable.ic_is_play_game_red,
        R.drawable.ic_is_play_game_gray
    ),
    CALLING_STATUS(
        "callingStatus",
        "전화여부",
        "",
        R.drawable.ic_is_phone_call_blue,
        R.drawable.ic_is_phone_call_red,
        R.drawable.ic_is_phone_call_gray
    ),
    STUDYING_STATUS(
        "studyingStatus",
        "공부여부",
        "",
        R.drawable.ic_studying_blue,
        R.drawable.ic_studying_red,
        R.drawable.ic_studying_gray
    ),
    EATING_STATUS(
        "eatingStatus",
        "섭취여부",
        "",
        R.drawable.ic_intake_blue,
        R.drawable.ic_intake_red,
        R.drawable.ic_intake_gray
    ),
    CLEANNESS_SENSITIVITY(
        "cleannessSensitivity",
        "청결예민도",
        "",
        R.drawable.ic_clean_sensitivity_blue,
        R.drawable.ic_clean_sensitivity_red,
        R.drawable.ic_clean_sensitivity_gray
    ),
    NOISE_SENSITIVITY(
        "noiseSensitivity",
        "소음예민도",
        "",
        R.drawable.ic_noise_sensitivity_blue,
        R.drawable.ic_noise_sensitivity_red,
        R.drawable.ic_noise_sensitivity_gray
    ),
    CLEANING_FREQUENCY(
        "cleaningFrequency",
        "청소빈도",
        "",
        R.drawable.ic_cleaning_frequency_blue,
        R.drawable.ic_cleaning_frequency_red,
        R.drawable.ic_cleaning_frequency_gray
    ),
    DRINKING_FREQUENCY(
        "drinkingFrequency",
        "음주빈도",
        "",
        R.drawable.ic_drinking_frequency_blue,
        R.drawable.ic_drinking_frequency_red,
        R.drawable.ic_drinking_frequency_gray
    ),
    PERSONALITIES(
        "personalities",
        "성격",
        "",
        R.drawable.ic_personality_blue,
        R.drawable.ic_personality_red,
        R.drawable.ic_personality_gray
    ),
    MBTI(
        "mbti",
        "MBTI",
        "",
        R.drawable.ic_mbti_blue,
        R.drawable.ic_mbti_red,
        R.drawable.ic_mbti_gray
    );

    companion object {
        fun getPrefByDisplayName(name: String): String {
            return entries.find { it.displayName == name }?.pref ?: ""
        }
    }
}